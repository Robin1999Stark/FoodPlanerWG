version: '3'

services:
  db:
    image: docker.io/library/postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=robin
      - POSTGRES_PASSWORD=postgres

  backend:
    build:
      context: ./Backend/backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 7 --worker-class gevent --timeout 180
    #command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - .:/code
      - ./data/media:/media
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=robin
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  frontend:
    build:
      context: ./Frontend/frontend
    expose:
      - "80:80"
    environment:
      - VIRTUAL_HOST=na-mahlzeit.de,www.na-mahlzeit.de
      - LETSENCRYPT_HOST=na-mahlzeit.de,www.na-mahlzeit.de
      - LETSENCRYPT_EMAIL=fuerRo138@gmx.de
    depends_on:
      - backend

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  nginx-letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs-volume:/etc/nginx/certs"

volumes:
  certs-volume:
  db-volume:
