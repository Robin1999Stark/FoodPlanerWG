version: '3'

services:
  db:
    image: docker.io/library/postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  backend:
    build:
      context: ./Backend/backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 7 --worker-class gevent --timeout 180
    #command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - .:/code
      - ./data/media:/media
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # Add --staging for debugging
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${EMAIL} -d ${DOMAIN} -d www.${DOMAIN} --agree-tos

  frontend:
    build:
      context: ./Frontend/frontend
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - backend
