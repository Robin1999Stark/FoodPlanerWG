version: '3'

services:
  db:
    image: docker.io/library/postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=robin
      - POSTGRES_PASSWORD=postgres

  backend:
    build:
      context: ./Backend/backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 7 --worker-class gevent --timeout 180
    #command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - .:/code
      - ./data/media:/media
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=robin
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  frontend:
    build:
      context: ./Frontend/frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/letsencrypt
    #  - /etc/ssl/certs:/etc/ssl/certs
    #  - /etc/ssl/private:/etc/ssl/private
    depends_on:
      - backend
    command: nginx -g 'daemon off;'

  certbot:
    image: certbot/certbot
    command: certonly --webroot --webroot-path=/usr/share/nginx/html -d na-mahlzeit.de -d www.na-mahlzeit.de --email deine-email@example.com --agree-tos --non-interactive
    volumes:
      - ./nginx/html:/usr/share/nginx/html # Zertifikat-Validierung Ã¼ber Webroot
      - ./nginx/certs:/etc/letsencrypt # Zertifikate speichern
    depends_on:
      - frontend

  certbot-renew:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot --webroot-path=/usr/share/nginx/html; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/letsencrypt
    depends_on:
      - frontend
